<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>Mickaël Céraline Blog</title>
        <link>https://www.mickaelceraline.com/blog</link>
        <description>Mickaël Céraline Blog</description>
        <lastBuildDate>Mon, 14 Apr 2025 18:40:11 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>fr</language>
        <item>
            <title><![CDATA[RentCRL – entre Domain Driven Design et minimal API]]></title>
            <link>https://www.mickaelceraline.com/blog/rentcrl-domain-driven-design-minimal-api</link>
            <guid>https://www.mickaelceraline.com/blog/rentcrl-domain-driven-design-minimal-api</guid>
            <pubDate>Mon, 14 Apr 2025 18:40:11 GMT</pubDate>
            <description><![CDATA[Suite du développement de RentCRL : l’application qui permet aux propriétaires d’envoyer automatiquement les quittances de loyer à leurs locataires. Après avoir travaillé sur le frontend en React et l’intégration d’Auth0 pour l’authentification, je me suis attaqué au backend. Je vous partage ici mes choix techniques et leur motivation.]]></description>
            <content:encoded><![CDATA[<p>Suite du développement de RentCRL : l’application qui permet aux propriétaires d’envoyer automatiquement les quittances de loyer à leurs locataires. Après avoir travaillé sur le frontend en React et l’intégration d’Auth0 pour l’authentification, je me suis attaqué au backend. Je vous partage ici mes choix techniques et leur motivation.</p><p>Pour faire simple, nous parlerons de clean architecture, DDD, minimal API, du pattern Result et de FluentValidation.</p><h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="-pourquoi-clean-architecture-et-domain-driven-design-">🧠 Pourquoi Clean Architecture et Domain Driven Design ?<a href="#-pourquoi-clean-architecture-et-domain-driven-design-" class="hash-link" aria-label="Lien direct vers 🧠 Pourquoi Clean Architecture et Domain Driven Design ?" title="Lien direct vers 🧠 Pourquoi Clean Architecture et Domain Driven Design ?">​</a></h3><p>J’ai choisi de structurer mon backend en suivant les principes de la <strong>Clean Architecture</strong> et du <strong>Domain Driven Design</strong> car ceux-ci sont populaires dans l’industrie et j’avais tout simplement envie de me les approprier et de les découvrir.</p><p>Ce n’est pas forcément simple au début, mais ça force à bien séparer les responsabilités :</p><ul><li>le domaine contient la logique métier</li><li>l’application s’occupe de l’orchestration</li><li>l’infrastructure gère l’accès aux données</li><li>la présentation reçoit les requêtes</li></ul><p>Voici l’arborescence de la solution :</p><p><img loading="lazy" alt="image.png" src="/assets/images/image-c715826e1f8e576430dff068e40ccb98.png" width="380" height="1773" class="img_ev3q"></p><h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="-pourquoi-jai-utilisé-minimal-api-">🚀 Pourquoi j’ai utilisé Minimal API ?<a href="#-pourquoi-jai-utilisé-minimal-api-" class="hash-link" aria-label="Lien direct vers 🚀 Pourquoi j’ai utilisé Minimal API ?" title="Lien direct vers 🚀 Pourquoi j’ai utilisé Minimal API ?">​</a></h3><p>Alors j’ai choisi d’utiliser Minimal API car pendant longtemps il fallait utiliser des contrôleurs mais depuis environ 2 ans .Net a sorti minimal API donc je me suis intéressé a ce que c’est.</p><p>De plus, je suis tombé sur une vidéo de Nick Chapsas qui compare minimal API avec MVC à travers une discussion sur le sujet et ce que j’en retiens est que minimal API est plus rapide, plus moderne avec moins de boilerplate et donc ça m’a encouragé dans mon envie de partir dessus.</p><p><a href="https://www.youtube.com/watch?v=bpVN_plQm5E" target="_blank" rel="noopener noreferrer">https://www.youtube.com/watch?v=bpVN_plQm5E</a></p><h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="-pourquoi-jutilise-resultt-au-lieu-dexceptions-">🎯 Pourquoi j'utilise <code>Result&lt;T&gt;</code> au lieu d’Exceptions ?<a href="#-pourquoi-jutilise-resultt-au-lieu-dexceptions-" class="hash-link" aria-label="Lien direct vers -pourquoi-jutilise-resultt-au-lieu-dexceptions-" title="Lien direct vers -pourquoi-jutilise-resultt-au-lieu-dexceptions-">​</a></h3><p>J’ai récemment regardé la vidéo de Milan Jovanovic qui introduit le pattern Result :</p><p><a href="https://www.youtube.com/watch?v=WCCkEe_Hy2Y&amp;t=612s" target="_blank" rel="noopener noreferrer">https://www.youtube.com/watch?v=WCCkEe_Hy2Y&amp;t=612s</a></p><p>Il explique que les exceptions peuvent être coûteuses en performance. Alors, il propose un pattern intéressant pour gérer les erreurs “attendues” comme par exemple les erreurs de validation.</p><p>Et ainsi, on envoie des exceptions que pour les erreurs qui théoriquement ne devraient jamais arriver comment par exemple au moment de la création d’un Owner avec un paramètre non valide.
Erreur attendue :</p><div class="language-csharp codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-csharp codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">public</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">async</span><span class="token plain"> </span><span class="token return-type class-name">Task</span><span class="token return-type class-name punctuation" style="color:#393A34">&lt;</span><span class="token return-type class-name">Result</span><span class="token return-type class-name punctuation" style="color:#393A34">&lt;</span><span class="token return-type class-name">Owner</span><span class="token return-type class-name punctuation" style="color:#393A34">&gt;</span><span class="token return-type class-name punctuation" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">CreateOwnerAsync</span><span class="token punctuation" style="color:#393A34">(</span><span class="token class-name keyword" style="color:#00009f">string</span><span class="token plain"> auth0Id</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token class-name keyword" style="color:#00009f">string</span><span class="token plain"> firstName</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token class-name keyword" style="color:#00009f">string</span><span class="token plain"> lastName</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token class-name keyword" style="color:#00009f">string</span><span class="token plain"> email</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token class-name keyword" style="color:#00009f">string</span><span class="token plain"> phoneNumber</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token class-name keyword" style="color:#00009f">var</span><span class="token plain"> response </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> _ownerRepository</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">GetByEmailAsync</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">email</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">response</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Result </span><span class="token operator" style="color:#393A34">!=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">null</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> Result</span><span class="token punctuation" style="color:#393A34">.</span><span class="token generic-method function" style="color:#d73a49">Failure</span><span class="token generic-method generic class-name punctuation" style="color:#393A34">&lt;</span><span class="token generic-method generic class-name">Owner</span><span class="token generic-method generic class-name punctuation" style="color:#393A34">&gt;</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">UserErrors</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">EmailAlreadyExists</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token class-name keyword" style="color:#00009f">var</span><span class="token plain"> newOwner </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">new</span><span class="token plain"> </span><span class="token constructor-invocation class-name">Owner</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">auth0Id</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> firstName</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> lastName</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> email</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> phoneNumber</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">await</span><span class="token plain"> _ownerRepository</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">AddAsync</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">newOwner</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copier le code" title="Copier" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Erreur qui ne devrait pas se produire car on est déjà passé par toutes les couches précédentes (y compris la validation avec FluentValidation) :</p><div class="language-csharp codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-csharp codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">public</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">Owner</span><span class="token punctuation" style="color:#393A34">(</span><span class="token class-name keyword" style="color:#00009f">string</span><span class="token plain"> auth0Id</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token class-name keyword" style="color:#00009f">string</span><span class="token plain"> firstName</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token class-name keyword" style="color:#00009f">string</span><span class="token plain"> lastName</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token class-name keyword" style="color:#00009f">string</span><span class="token plain"> email</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token class-name keyword" style="color:#00009f">string</span><span class="token plain"> phoneNumber</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">string</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">IsNullOrEmpty</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">auth0Id</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">throw</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">new</span><span class="token plain"> </span><span class="token constructor-invocation class-name">ArgumentException</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"Auth0Id cannot be null."</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">nameof</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">auth0Id</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">string</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">IsNullOrEmpty</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">firstName</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">throw</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">new</span><span class="token plain"> </span><span class="token constructor-invocation class-name">ArgumentException</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"Firstname cannot be null."</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">nameof</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">firstName</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">string</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">IsNullOrEmpty</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">lastName</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">throw</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">new</span><span class="token plain"> </span><span class="token constructor-invocation class-name">ArgumentException</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"LastName cannot be null."</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">nameof</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">lastName</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token operator" style="color:#393A34">!</span><span class="token plain">Regexes</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Email</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">IsMatch</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">email</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">throw</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">new</span><span class="token plain"> </span><span class="token constructor-invocation class-name">ArgumentException</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"Email is not valid."</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">nameof</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">email</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token operator" style="color:#393A34">!</span><span class="token plain">Regexes</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">PhoneNumber</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">IsMatch</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">phoneNumber</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">throw</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">new</span><span class="token plain"> </span><span class="token constructor-invocation class-name">ArgumentException</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"PhoneNumber is not valid."</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">nameof</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">phoneNumber</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    Id </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> Guid</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">NewGuid</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    Auth0Id </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> auth0Id</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    FirstName </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> firstName</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    LastName </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> lastName</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    Email </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> email</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    PhoneNumber </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> phoneNumber</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copier le code" title="Copier" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="️-et-fluentvalidation-dans-tout-ça-">✔️ Et FluentValidation dans tout ça ?<a href="#️-et-fluentvalidation-dans-tout-ça-" class="hash-link" aria-label="Lien direct vers ✔️ Et FluentValidation dans tout ça ?" title="Lien direct vers ✔️ Et FluentValidation dans tout ça ?">​</a></h3><p>Je valide les entrées utilisateur dès la couche d’exposition, avec <strong>FluentValidation</strong>. C’est simple à brancher, puissant, et me permet de retourner des erreurs claires côté frontend sans mêler la validation à la logique métier. La couche domaine reste concentrée sur les règles métier, pendant que la validation des entrées est gérée directement dans la couche de présentation. Ça m'évite d’avoir des if/else ou des exceptions partout, et je peux centraliser les règles de validation dans des classes dédiées.</p><p>J’ai découvert FluentValidation grâce à mon frère, mais aussi via cette vidéo de Milan Jovanovic qui en fait une bonne démo :</p><p><a href="https://www.youtube.com/watch?v=vaDDB7BpEgQ" target="_blank" rel="noopener noreferrer">https://www.youtube.com/watch?v=vaDDB7BpEgQ</a></p><p>C’est ce qui m’a convaincu de l’adopter ici.</p><div class="language-csharp codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-csharp codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">public</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">class</span><span class="token plain"> </span><span class="token class-name">OwnerModelValidator</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token type-list class-name">AbstractValidator</span><span class="token type-list class-name punctuation" style="color:#393A34">&lt;</span><span class="token type-list class-name">OwnerModel</span><span class="token type-list class-name punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">public</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">OwnerModelValidator</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token function" style="color:#d73a49">RuleFor</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">o </span><span class="token operator" style="color:#393A34">=&gt;</span><span class="token plain"> o</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Auth0Id</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">NotEmpty</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token function" style="color:#d73a49">RuleFor</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">o </span><span class="token operator" style="color:#393A34">=&gt;</span><span class="token plain"> o</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">FirstName</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">NotEmpty</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token function" style="color:#d73a49">RuleFor</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">o </span><span class="token operator" style="color:#393A34">=&gt;</span><span class="token plain"> o</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">LastName</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">NotEmpty</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token function" style="color:#d73a49">RuleFor</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">o </span><span class="token operator" style="color:#393A34">=&gt;</span><span class="token plain"> o</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Email</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">NotEmpty</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Matches</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">Regexes</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Email</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token function" style="color:#d73a49">RuleFor</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">o </span><span class="token operator" style="color:#393A34">=&gt;</span><span class="token plain"> o</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">PhoneNumber</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">NotEmpty</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Matches</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">Regexes</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">PhoneNumber</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copier le code" title="Copier" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><div class="language-csharp codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-csharp codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">public</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">static</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">class</span><span class="token plain"> </span><span class="token class-name">OwnerEndpoint</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">public</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> </span><span class="token class-name keyword" style="color:#00009f">string</span><span class="token plain"> PostOwnerRoute </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"/owners"</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">public</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">static</span><span class="token plain"> </span><span class="token return-type class-name keyword" style="color:#00009f">void</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">MapOwnerEndpoint</span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">this</span><span class="token plain"> </span><span class="token class-name">IEndpointRouteBuilder</span><span class="token plain"> app</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        app</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">MapPost</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">PostOwnerRoute</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> CreateOwner</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">RequireAuthorization</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">WithName</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"Owners"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">internal</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">static</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">async</span><span class="token plain"> </span><span class="token return-type class-name">Task</span><span class="token return-type class-name punctuation" style="color:#393A34">&lt;</span><span class="token return-type class-name">IResult</span><span class="token return-type class-name punctuation" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">CreateOwner</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">[</span><span class="token attribute class-name">FromBody</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token class-name">OwnerModel</span><span class="token plain"> ownerModel</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token class-name">IOwnerService</span><span class="token plain"> ownerService</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token class-name">IValidator</span><span class="token class-name punctuation" style="color:#393A34">&lt;</span><span class="token class-name">OwnerModel</span><span class="token class-name punctuation" style="color:#393A34">&gt;</span><span class="token plain"> validator</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token class-name keyword" style="color:#00009f">var</span><span class="token plain"> validationResult </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> validator</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Validate</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">ownerModel</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token operator" style="color:#393A34">!</span><span class="token plain">validationResult</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">IsValid</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> Results</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">ValidationProblem</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">validationResult</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">ToDictionary</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token class-name keyword" style="color:#00009f">var</span><span class="token plain"> result </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">await</span><span class="token plain"> ownerService</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">CreateOwnerAsync</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            ownerModel</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Auth0Id</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            ownerModel</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">FirstName</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            ownerModel</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">LastName</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            ownerModel</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Email</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            ownerModel</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">PhoneNumber</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">result</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">IsSuccess</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token class-name keyword" style="color:#00009f">var</span><span class="token plain"> newOwner </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> result</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Value</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">ToModel</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> Results</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Ok</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">newOwner</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">result</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Error </span><span class="token operator" style="color:#393A34">==</span><span class="token plain"> UserErrors</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">EmailAlreadyExists</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> Results</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Conflict</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> Results</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Problem</span><span class="token punctuation" style="color:#393A34">(</span><span class="token named-parameter punctuation" style="color:#393A34">statusCode</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> StatusCodes</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Status500InternalServerError</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copier le code" title="Copier" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="-le-résultat-">🧪 Le résultat ?<a href="#-le-résultat-" class="hash-link" aria-label="Lien direct vers 🧪 Le résultat ?" title="Lien direct vers 🧪 Le résultat ?">​</a></h3><p>Au final, je pense avoir un backend propre. C’est-à-dire testable et facile à maintenir pour ajouter les autres fonctionnalités par la suite et prêt à être déployé sur Azure. En tout cas, cela reste mon point de vue de développeur avec 2 ans d’expérience.</p><p>📁 Code source ici : <a href="https://github.com/MickaelCRL/RentCRL" target="_blank" rel="noopener noreferrer">github.com/MickaelCRL/RentCRL</a></p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Architecture de RentCRL]]></title>
            <link>https://www.mickaelceraline.com/blog/architecture-rentcrl</link>
            <guid>https://www.mickaelceraline.com/blog/architecture-rentcrl</guid>
            <pubDate>Thu, 07 Mar 2024 00:00:00 GMT</pubDate>
            <description><![CDATA[1 - Introduction]]></description>
            <content:encoded><![CDATA[<h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="1---introduction">1 - Introduction<a href="#1---introduction" class="hash-link" aria-label="Lien direct vers 1 - Introduction" title="Lien direct vers 1 - Introduction">​</a></h2><p>Dans cet article, je vais vous présenter l'architecture de RentCRL, visant à simplifier la gestion locative en automatisant les tâches telles que la collecte des loyers et la génération des quittances pour les propriétaires.</p><h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="2---choix-conceptuels">2 - Choix Conceptuels<a href="#2---choix-conceptuels" class="hash-link" aria-label="Lien direct vers 2 - Choix Conceptuels" title="Lien direct vers 2 - Choix Conceptuels">​</a></h2><p>Pour ce projet de taille modeste, j'ai choisi de réaliser uniquement 3 diagrammes dans ma partie conception pour m'aider à le concrétiser.</p><p>Les voici :</p><h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="diagramme-de-cas-dutilisation">Diagramme de cas d'utilisation<a href="#diagramme-de-cas-dutilisation" class="hash-link" aria-label="Lien direct vers Diagramme de cas d'utilisation" title="Lien direct vers Diagramme de cas d'utilisation">​</a></h3><a target="_blank" href="/img/architecture-Use-case.jpg"><img loading="lazy" src="/img/architecture-Use-case.jpg" alt="architecture-Use-case" class="img_ev3q"></a>Le diagramme de cas d'utilisation de RentCRL illustre les interactions entre les utilisateurs et le système. Les acteurs, tels que les propriétaires, les locataires et les collaborateurs, interagissent avec différentes fonctionnalités de l'application.<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="diagramme-de-classe">Diagramme de classe<a href="#diagramme-de-classe" class="hash-link" aria-label="Lien direct vers Diagramme de classe" title="Lien direct vers Diagramme de classe">​</a></h3><a target="_blank" href="/img/architecture-Class-Diagram.jpg"><img loading="lazy" src="/img/architecture-Class-Diagram.jpg" alt="architecture-Class-Diagram" class="img_ev3q"></a>Le diagramme de classe de RentCRL modélise la structure des entités principales et leurs relations.<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="diagramme-dinfrastructure">Diagramme d'infrastructure<a href="#diagramme-dinfrastructure" class="hash-link" aria-label="Lien direct vers Diagramme d'infrastructure" title="Lien direct vers Diagramme d'infrastructure">​</a></h3><a target="_blank" href="/img/architecture-Infrastructure.jpg"><img loading="lazy" src="/img/architecture-Infrastructure.jpg" alt="architecture-Infrastructure" class="img_ev3q"></a><p>L'infrastructure de RentCRL se compose de quatre éléments clés :</p><ul><li>Web : L'application web contenant les fichiers JavaScript, HTML, CSS.</li><li>Backend : L'application backend renfermant les fichiers C# / .Net et responsable du fonctionnement logique du système.</li><li>DataBase 'CosmosDB' : Le stockage sécurisé des données nécessaires au bon fonctionnement de RentCRL.</li><li>Auth0 : L'authentification et la gestion des mots de passe des utilisateurs.</li></ul><p>J'ai choisi ces trois diagrammes spécifiques pour leur pertinence même dans le cadre d'un projet modeste comme RentCRL. Ensemble, ils fournissent une perspective exhaustive des interactions utilisateur, de la structure des données et de l'infrastructure technique nécessaires pour le développement du système.</p><h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="3---conclusion">3 - CONCLUSION<a href="#3---conclusion" class="hash-link" aria-label="Lien direct vers 3 - CONCLUSION" title="Lien direct vers 3 - CONCLUSION">​</a></h2><p>Ces diagrammes constituent une base pour m'aider à la réalisation concrète de RentCRL. Dans le prochain article, je commencerai à montrer comment créer la solution.</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Présentation de RentCRL]]></title>
            <link>https://www.mickaelceraline.com/blog/presentation-rentcrl</link>
            <guid>https://www.mickaelceraline.com/blog/presentation-rentcrl</guid>
            <pubDate>Sat, 30 Sep 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[1 - Objectif]]></description>
            <content:encoded><![CDATA[<h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="1---objectif">1 - Objectif<a href="#1---objectif" class="hash-link" aria-label="Lien direct vers 1 - Objectif" title="Lien direct vers 1 - Objectif">​</a></h2><p>Je suis heureux de vous présenter mon nouveau projet, RentCRL. Dans les prochains jours, je travaillerai activement sur ce projet et partagerai avec vous les détails de son développement à travers une série d'articles.</p><p>RentCRL vise à simplifier la gestion des biens immobiliers pour les propriétaires. Il s'agit d'une application web qui permettra aux propriétaires de prélever les loyers de leurs locataires et d'envoyer les quittances de manière entièrement automatisée.</p><h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="2---inspiration">2 - Inspiration<a href="#2---inspiration" class="hash-link" aria-label="Lien direct vers 2 - Inspiration" title="Lien direct vers 2 - Inspiration">​</a></h2><p>L'idée derrière RentCRL découle d'une expérience personnelle au sein de notre entreprise familiale spécialisée dans l'immobilier. Nous avons constaté la nécessité de simplifier le processus de gestion des loyers et des quittances, actuellement géré manuellement avec l'aide de l'outil Rentila.</p><p>Mes motivations pour ce projet sont doubles :</p><ol><li>Simplifier et automatiser une tâche fastidieuse tout en mettant en pratique mes compétences en développement web.</li><li>Accroître ma visibilité en tant que développeur web pour décrocher des contrats de développement intéressants.</li></ol><h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="3---méthodologie">3 - Méthodologie<a href="#3---méthodologie" class="hash-link" aria-label="Lien direct vers 3 - Méthodologie" title="Lien direct vers 3 - Méthodologie">​</a></h2><p>Le développement de RentCRL fera appel aux technologies suivantes :</p><ul><li>Front-end :<ul><li>JavaScript</li><li>HTML5</li><li>Angular</li><li>CSS3</li></ul></li><li>Back-end :<ul><li>C# / .NET</li></ul></li><li>Base de données :<ul><li>Azure CosmosDB</li></ul></li></ul><h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="4---à-venir">4 - À venir<a href="#4---à-venir" class="hash-link" aria-label="Lien direct vers 4 - À venir" title="Lien direct vers 4 - À venir">​</a></h2><p>Je commencerai par la phase de planification et de conception. Prochainement, je vous présenterai en détail l'architecture de RentCRL.</p>]]></content:encoded>
        </item>
    </channel>
</rss>